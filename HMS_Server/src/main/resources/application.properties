# =============================
# MySQL Configuration
# =============================
spring.datasource.url=jdbc:mysql://mysql-2aee5567-singhshambhawi800-086d.i.aivencloud.com:18536/defaultdb?ssl-mode=REQUIRED
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_EVU8NFGqNGgXbliShWG
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# =============================
# Application General Settings
# =============================
spring.application.name=HMS
server.port=9091
spring.jackson.serialization.indent_output=true

# =============================
# MongoDB Configuration
# =============================
spring.data.mongodb.uri=mongodb+srv://dbUser:dbUserPassword@cluster0.zvk88tb.mongodb.net/
spring.data.mongodb.database=policies_db

# =============================
# Kafka Configuration
# =============================
spring.kafka.bootstrap-servers=kafka-2ae6e6a3-singhshambhawi800-086d.c.aivencloud.com:18549

# Consumer group (you can override in @KafkaListener if needed)
# spring.kafka.consumer.group-id=hospital
spring.kafka.consumer.auto-offset-reset=earliest

# Producer/consumer serializers
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# =============================
# Kafka Security (Aiven: SASL/SSL)
# =============================
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="avnadmin" password="AVNS_bh384bE5WTYQnxQiFb1";

# Truststore (created from ca.pem with keytool)
spring.kafka.properties.ssl.truststore.location=classpath:client.truststore.jks
spring.kafka.properties.ssl.truststore.password=changeit
spring.kafka.properties.ssl.truststore.type=JKS
